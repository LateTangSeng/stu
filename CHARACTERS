This file catalogues the usage of individual characters in Stu source code.
Since Stu is used to specify filenames, many characters that are used as
operators in programming languages are allowed in filenames, such as
'/', '~', etc.  Other characters are used as part of the Stu syntax. 

== Allowed in unquoted names == 

[a-z] [A-Z] [0-9] 
_ ^ ` + - . ~ / 
[all non-ASCII characters]

(In version 2, '-' and '+' will not be allowed as the first character of
a filename.) 

== Recognized as whitespace == 

Everything for which isspace() returns true in the C locale, i.e., only
ASCII spaces and tabs, etc. (" \f\n\r\t\v")

== Not allowed outside quotes == 

ASCII control characters (except those that are space)  

== Characters introducing longer tokens == 

# 	Comment (until the end of the line) 
%	Statements (followed by the statement name, and optionally followed
	by arguments depending on the statement); comparable to preprocessor
	directives 
" '	Quotes 
{}	Command, content
$	Parameter, variable dependencies 

== Operators == 

These characters are single-character tokens. 

:	Rule definition
;	End of rule
@	Transient target
( )	List 
[ ]	Dynamic list
>	Output redirection
<	Input redirection 
!	Existence-only dependency
?	Optional dependency 
&	Trivial dependency
=	Assignment, copy, and named variable

== As-yet unused operators ==

We don't include here uses that are described in UNIMPLEMENTED.stu.  

*	String concatenation 
\	Escape
-	(version 2, only as first character) Option
+	(version 2, only as first character) Option
,	(no proposed use)
|	(no proposed use)
?!&     (version 2) Will become free again when they are replaced
 	by flags
