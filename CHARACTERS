This file catalogues the usage of individual characters in Stu source
files.  

Since Stu sources consist promarily of filenames, many characters that
are used as operators in programming languages cannot be used in Stu as
they are needed as part of filenames, such as '/', '~', etc.  

== Allowed in unquoted names == 

These characters don't have to be quoted in names.  

[a-z] [A-Z] [0-9] 
_ ^ ` + - . ~ / 
<all non-ASCII characters>

(In version 2 of Stu, '-', '+' and '~' will not be allowed as the first
character of a filename.)  

== Recognized as whitespace == 

Everything for which isspace() returns true in the C locale is
recognized as whitespace by Stu.  I.e., " \f\n\r\t\v". 

== Not allowed outside quotes == 

ASCII control characters (except those that are whitespace). 

== Characters introducing longer tokens == 

# 	Comment (until the end of the line) 
%	Statements (followed by the statement name, and optionally followed
	by arguments depending on the statement); comparable to preprocessor
	directives.  The statement name and arguments followed regular
	Stu quoting rules. 
" '	Quotes 
{}	Command, content
$	Parameter, variable dependencies 

== Operators == 

These characters are single-character tokens. 

:	Introduces dependencies
;	End of rule when no command or content is present
@	Transient target prefix
( )	List 
[ ]	Dynamic list
>	Output redirection (target only)
<	Input redirection (dependency only)
!	Timestamp-ignoring dependency
?	Optional dependency 
&	Trivial dependency
=	Assignment, copy, and named variable

== As-yet unused operators ==

These characters are reserved for future extension.  They are not
allowed outside quoted strings in the current version.  The given uses
are proposed and tentative. 

*	String concatenation 
\	Escape of characters, or another use
-	(version 2, only as first character) Option
+	(version 2, only as first character) Option
,	(no proposed use)
|	(no proposed use)
?!&     (version 2) Will become free again when they are replaced
 	by flags
