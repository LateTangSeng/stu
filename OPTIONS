
An overview of possible assignment of options letters, including those
used by Make.  

Legend
======

S   Implemented in Stu
.   Proposed for Stu 
-   Not proposed for Stu, but the option is purposefully kept unused in
    case we want to use it for Stu 
M   Compatible with POSIX Make
G   Compatible with GNU Make
x   Incompatible

List of options
===============

-a  S      Consider trivial dependencies to be non-trivial
-b  .   x  Enable backups (GNU Make: compatibility)
-B  .   G  Re-make all
-c  S      Explicit target without syntax (GNU Make:  change directory)
-C  S   x  Specify syntax (same as non-option arguments)
-d      G  Print debugging information 
-e    M G  Environment overrides Make macros
-E  S      Explain errors
-f  S M G  File
-F  .      Pass rule on the command line
-g  S      Consider optional dependencies to be non-optional 
-h  S   G  Show help and exit 
-i  . M G  Ignore all errors in commands
-I  .   G  Include path
-j  S   G  Parallel
-L  S      Don't parse Stu syntax in arguments
-k  S M G  Keep going
-K  S      Keep partially built files
-l      G  Number of jobs depends on load average
-L      G  Special handling of symlinks
-m  S   x  Mode; e.g., random order, etc. (GNU Make: compatibility)
-M  S      Seed mode
-n  . M G  Dry run (just print commands)
-N  .      Dry run, but build dynamic dependencies 
-o  .   G  Mark file as old
-p  S M G  Print database (rule set)
-q  S M G  Question mode / Query mode
-r    M G  No builtin rules
-R      G  No builtin variables
-s  S M G  Silent
-S  - M G  No keep going
-t  - M G  Touch instead of building
-u  .      Consider all files up-to-date 
-v  S   x  Verbose (GNU Make:  show version)
-V  S      Show version and exit
-w  S	x  Short mode (GNU Make:  print directory) 
-W  .   G  What-if mode (if FILE just had been modified)
-x  S      Enable /bin/sh -x instead of normal output
-y       
-z  .      Output statistics
